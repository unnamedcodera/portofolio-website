# Nginx SSL Configuration untuk Production
# File: /etc/nginx/conf.d/default.conf

# Redirect HTTP to HTTPS for frontend
server {
    listen 80;
    server_name darahitam.com www.darahitam.com;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Redirect HTTP to HTTPS for backend
server {
    listen 80;
    server_name api.darahitam.com;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Frontend HTTPS - darahitam.com
server {
    listen 443 ssl http2;
    server_name darahitam.com www.darahitam.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/darahitam.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/darahitam.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss application/json application/javascript;

    location / {
        proxy_pass http://frontend:80;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # Cache static assets
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend:80;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
}

# Backend API HTTPS - api.darahitam.com
server {
    listen 443 ssl http2;
    server_name api.darahitam.com;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.darahitam.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.darahitam.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Max upload size
    client_max_body_size 10M;

    # API Routes
    location / {
        proxy_pass http://backend:5001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_cache_bypass $http_upgrade;
        
        # CORS handled by backend - don't add headers here!
    }

    # Serve uploaded files
    location /uploads/ {
        alias /usr/share/nginx/html/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        # CORS handled by backend /uploads route
    }
}
